name: CI for Platform Homework Java App

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  IMAGE_NAME: ghcr.io/tisamwilliam/spring-hello-problem
  IMAGE_TAG: 1.0.0

jobs:
  build-images:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_NAME: ${{ env.IMAGE_NAME }}
      IMAGE_TAG: ${{ env.IMAGE_TAG }}
      JMX_IMAGE_NAME: ${{ env.JMX_IMAGE_NAME }}
      JMX_IMAGE_TAG: ${{ env.JMX_IMAGE_TAG }}

    env:
      IMAGE_NAME: ghcr.io/tisamwilliam/spring-hello-problem
      IMAGE_TAG: 1.0.0
      JMX_IMAGE_NAME: ghcr.io/tisamwilliam/jmx-exporter
      JMX_IMAGE_TAG: 1.0.0

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Spring App
        run: mvn clean package -DskipTests
        working-directory: docker/spring-hello-problem

      - name: Build Spring App Docker Image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
        working-directory: docker/spring-hello-problem

      - name: Build JMX Exporter Docker Image
        run: |
          docker build -t $JMX_IMAGE_NAME:$JMX_IMAGE_TAG .
          docker tag $JMX_IMAGE_NAME:$JMX_IMAGE_TAG $JMX_IMAGE_NAME:latest
        working-directory: docker/jmx-exporter

  push-images:
    runs-on: ubuntu-latest
    needs: build-images
    env:
      IMAGE_NAME: ghcr.io/tisamwilliam/spring-hello-problem
      IMAGE_TAG: 1.0.0
      JMX_IMAGE_NAME: ghcr.io/tisamwilliam/jmx-exporter
      JMX_IMAGE_TAG: 1.0.0

    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Spring App Image
        run: |
          docker push $IMAGE_NAME:$IMAGE_TAG
          docker push $IMAGE_NAME:latest

      - name: Push JMX Exporter Image
        run: |
          docker push $JMX_IMAGE_NAME:$JMX_IMAGE_TAG
          docker push $JMX_IMAGE_NAME:latest

  helm-validate:
    runs-on: ubuntu-latest
    needs: push-images

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.0

      - name: Helm lint
        run: helm lint charts

      - name: Helm template dry-run
        run: |
          helm template test charts \
            --set image.repository=${{ env.IMAGE_NAME }} \
            --set image.tag=latest
